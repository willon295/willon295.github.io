(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{447:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("序列(SEQUENCE)是序列号生成器，可以为表中的行自动生成序列号，产生一组等间隔的数值(类型为数字)。\n其主要用途是生成表的主键值，可以在插入语句中引用，也可以通过查询检查当前值，或使序列增至下一个值。")]),t._v(" "),s("h1",{attrs:{id:"基础语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础语法"}},[t._v("#")]),t._v(" 基础语法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("　　CREATE SEQUENCE 序列名\n　　[INCREMENT BY n]\n　　[START WITH n]\n　　[{MAXVALUE/ MINVALUE n| NOMAXVALUE}]\n　　[{CYCLE|NOCYCLE}]\n　　[{CACHE n| NOCACHE}];\n")])])]),s("h1",{attrs:{id:"实现主键自增"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现主键自增"}},[t._v("#")]),t._v(" 实现主键自增")]),t._v(" "),s("h2",{attrs:{id:"创建序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建序列"}},[t._v("#")]),t._v(" 创建序列")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("create sequence student_id --序列名\nincrement  by 2         --每次增加2\nstart with  1;          --从1开始\n")])])]),s("h2",{attrs:{id:"使用序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用序列"}},[t._v("#")]),t._v(" 使用序列")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("--使用 序列名.nextval 获取自增的值\ninsert  into student values(student_id.nextval,'张三');\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);