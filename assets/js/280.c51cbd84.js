(window.webpackJsonp=window.webpackJsonp||[]).push([[280],{538:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_6-1-session和cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-session和cookie"}},[s._v("#")]),s._v(" 6.1 session和cookie")]),s._v(" "),a("p",[s._v("session和cookie是网站浏览中较为常见的两个概念，也是比较难以辨析的两个概念，但它们在浏览需要认证的服务页面以及页面统计中却相当关键。我们先来了解一下session和cookie怎么来的？考虑这样一个问题：")]),s._v(" "),a("p",[s._v("如何抓取一个访问受限的网页？如新浪微博好友的主页，个人微博页面等。")]),s._v(" "),a("p",[s._v("显然，通过浏览器，我们可以手动输入用户名和密码来访问页面，而所谓的“抓取”，其实就是使用程序来模拟完成同样的工作，因此我们需要了解“登录”过程中到底发生了什么。")]),s._v(" "),a("p",[s._v("当用户来到微博登录页面，输入用户名和密码之后点击“登录”后浏览器将认证信息POST给远端的服务器，服务器执行验证逻辑，如果验证通过，则浏览器会跳转到登录用户的微博首页，在登录成功后，服务器如何验证我们对其他受限制页面的访问呢？因为HTTP协议是无状态的，所以很显然服务器不可能知道我们已经在上一次的HTTP请求中通过了验证。当然，最简单的解决方案就是所有的请求里面都带上用户名和密码，这样虽然可行，但大大加重了服务器的负担（对于每个request都需要到数据库验证），也大大降低了用户体验(每个页面都需要重新输入用户名密码，每个页面都带有登录表单)。既然直接在请求中带上用户名与密码不可行，那么就只有在服务器或客户端保存一些类似的可以代表身份的信息了，所以就有了cookie与session。")]),s._v(" "),a("p",[s._v("cookie，简而言之就是在本地计算机保存一些用户操作的历史信息（当然包括登录信息），并在用户再次访问该站点时浏览器通过HTTP协议将本地cookie内容发送给服务器，从而完成验证，或继续上一步操作。")]),s._v(" "),a("p",[a("img",{attrs:{src:"images/6.1.cookie2.png?raw=true",alt:""}})]),s._v(" "),a("p",[s._v("图6.1 cookie的原理图")]),s._v(" "),a("p",[s._v("session，简而言之就是在服务器上保存用户操作的历史信息。服务器使用session id来标识session，session id由服务器负责产生，保证随机性与唯一性，相当于一个随机密钥，避免在握手或传输中暴露用户真实密码。但该方式下，仍然需要将发送请求的客户端与session进行对应，所以可以借助cookie机制来获取客户端的标识（即session id），也可以通过GET方式将id提交给服务器。")]),s._v(" "),a("p",[a("img",{attrs:{src:"images/6.1.session.png?raw=true",alt:""}})]),s._v(" "),a("p",[s._v("图6.2 session的原理图")]),s._v(" "),a("h2",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[s._v("#")]),s._v(" cookie")]),s._v(" "),a("p",[s._v("Cookie是由浏览器维持的，存储在客户端的一小段文本信息，伴随着用户请求和页面在Web服务器和浏览器之间传递。用户每次访问站点时，Web应用程序都可以读取cookie包含的信息。浏览器设置里面有cookie隐私数据选项，打开它，可以看到很多已访问网站的cookies，如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"images/6.1.cookie.png?raw=true",alt:""}})]),s._v(" "),a("p",[s._v("图6.3 浏览器端保存的cookie信息")]),s._v(" "),a("p",[s._v("cookie是有时间限制的，根据生命期不同分成两种：会话cookie和持久cookie；")]),s._v(" "),a("p",[s._v("如果不设置过期时间，则表示这个cookie的生命周期为从创建到浏览器关闭为止，只要关闭浏览器窗口，cookie就消失了。这种生命期为浏览会话期的cookie被称为会话cookie。会话cookie一般不保存在硬盘上而是保存在内存里。")]),s._v(" "),a("p",[s._v("如果设置了过期时间(setMaxAge(60"),a("em",[s._v("60")]),s._v("24))，浏览器就会把cookie保存到硬盘上，关闭后再次打开浏览器，这些cookie依然有效直到超过设定的过期时间。存储在硬盘上的cookie可以在不同的浏览器进程间共享，比如两个IE窗口。而对于保存在内存的cookie，不同的浏览器有不同的处理方式。")]),s._v(" "),a("h3",{attrs:{id:"go设置cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go设置cookie"}},[s._v("#")]),s._v(" Go设置cookie")]),s._v(" "),a("p",[s._v("Go语言中通过net/http包中的SetCookie来设置：")]),s._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetCookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("w ResponseWriter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cookie "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Cookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("w表示需要写入的response，cookie是一个struct，让我们来看一下cookie对象是怎么样的")]),s._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Cookie "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tName       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\tValue      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\tPath       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\tDomain     "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\tExpires    time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Time\n\tRawExpires "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MaxAge=0 means no 'Max-Age' attribute specified.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MaxAge<0 means delete cookie now, equivalently 'Max-Age: 0'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MaxAge>0 means Max-Age attribute present and given in seconds")]),s._v("\n\tMaxAge   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\n\tSecure   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v("\n\tHttpOnly "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v("\n\tRaw      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\tUnparsed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Raw text of unparsed attribute-value pairs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),a("p",[s._v("我们来看一个例子，如何设置cookie")]),s._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("\nexpiration "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nexpiration "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" expiration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("AddDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncookie "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Cookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"astaxie"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Expires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" expiration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetCookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("cookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p"),s._v(" "),a("h3",{attrs:{id:"go读取cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go读取cookie"}},[s._v("#")]),s._v(" Go读取cookie")]),s._v(" "),a("p",[s._v("上面的例子演示了如何设置cookie数据，我们这里来演示一下如何读取cookie")]),s._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("\ncookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fprint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("还有另外一种读取方式")]),s._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cookie "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Cookies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fprint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("可以看到通过request获取cookie非常方便。")]),s._v(" "),a("h2",{attrs:{id:"session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[s._v("#")]),s._v(" session")]),s._v(" "),a("p",[s._v("session，中文经常翻译为会话，其本来的含义是指有始有终的一系列动作/消息，比如打电话是从拿起电话拨号到挂断电话这中间的一系列过程可以称之为一个session。然而当session一词与网络协议相关联时，它又往往隐含了“面向连接”和/或“保持状态”这样两个含义。")]),s._v(" "),a("p",[s._v("session在Web开发环境下的语义又有了新的扩展，它的含义是指一类用来在客户端与服务器端之间保持状态的解决方案。有时候Session也用来指这种解决方案的存储结构。")]),s._v(" "),a("p",[s._v("session机制是一种服务器端的机制，服务器使用一种类似于散列表的结构(也可能就是使用散列表)来保存信息。")]),s._v(" "),a("p",[s._v("但程序需要为某个客户端的请求创建一个session的时候，服务器首先检查这个客户端的请求里是否包含了一个session标识－称为session id，如果已经包含一个session id则说明以前已经为此客户创建过session，服务器就按照session id把这个session检索出来使用(如果检索不到，可能会新建一个，这种情况可能出现在服务端已经删除了该用户对应的session对象，但用户人为地在请求的URL后面附加上一个JSESSION的参数)。如果客户请求不包含session id，则为此客户创建一个session并且同时生成一个与此session相关联的session id，这个session id将在本次响应中返回给客户端保存。")]),s._v(" "),a("p",[s._v("session机制本身并不复杂，然而其实现和配置上的灵活性却使得具体情况复杂多变。这也要求我们不能把仅仅某一次的经验或者某一个浏览器，服务器的经验当作普遍适用的。")]),s._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("如上文所述，session和cookie的目的相同，都是为了克服http协议无状态的缺陷，但完成的方法不同。session通过cookie，在客户端保存session id，而将用户的其他会话消息保存在服务端的session对象中，与此相对的，cookie需要将所有信息都保存在客户端。因此cookie存在着一定的安全隐患，例如本地cookie中保存的用户名密码被破译，或cookie被其他网站收集（例如：1. appA主动设置域B cookie，让域B cookie获取；2. XSS，在appA上通过javascript获取document.cookie，并传递给自己的appB）。")]),s._v(" "),a("p",[s._v("通过上面的一些简单介绍我们了解了cookie和session的一些基础知识，知道他们之间的联系和区别，做web开发之前，有必要将一些必要知识了解清楚，才不会在用到时捉襟见肘，或是在调bug时如无头苍蝇乱转。接下来的几小节我们将详细介绍session相关的知识。")]),s._v(" "),a("h2",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[s._v("#")]),s._v(" links")]),s._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/编程语言/Go/preface.html"}},[s._v("目录")])],1),s._v(" "),a("li",[s._v("上一节: "),a("RouterLink",{attrs:{to:"/编程语言/Go/06.0.html"}},[s._v("session和数据存储")])],1),s._v(" "),a("li",[s._v("下一节: "),a("RouterLink",{attrs:{to:"/编程语言/Go/06.2.html"}},[s._v("Go如何使用session")])],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);