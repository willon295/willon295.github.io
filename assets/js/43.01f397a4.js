(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{354:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Serializable")]),t._v("： 序列化接口，如果某个类需要在网络传输，应实现此接口")]),t._v(" "),s("li",[s("code",[t._v("DataInput")]),t._v("： 将数据读取成java原始数据类型接口")]),t._v(" "),s("li",[s("code",[t._v("DataOutput")]),t._v("： 将java原始数据转换成二进制数据输出接口")])]),t._v(" "),s("h2",{attrs:{id:"字符流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符流"}},[t._v("#")]),t._v(" 字符流")]),t._v(" "),s("p",[s("strong",[t._v("适用场景")]),t._v("\n比较适合处理 "),s("code",[t._v("文本类型")]),t._v(" 数据\n"),s("strong",[t._v("常用类")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("|Reader\n|--BufferedReader\n|--InputStreamReader--FileReader\n|Writer\n|--BufferedWriter\n|--OutputStreamWriter--FileWriter\n")])])]),s("h2",{attrs:{id:"字节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节流"}},[t._v("#")]),t._v(" 字节流")]),t._v(" "),s("p",[s("strong",[t._v("适用场景")])]),t._v(" "),s("p",[t._v("字节流几乎可以处理所有类型的数据")]),t._v(" "),s("p",[s("strong",[t._v("常用类")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedInputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataInputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectInputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedOutputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataOutputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectOutputStream")]),t._v("\n")])])]),s("h2",{attrs:{id:"具体细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体细节"}},[t._v("#")]),t._v(" 具体细节")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("什么是比特流？ 什么是字节流？ 什么是字符流？")]),t._v(" "),s("ul",[s("li",[t._v("Bit（中文管它叫 "),s("code",[t._v("位")]),t._v(" ）是最小的二进制，比特流传输的是0101")]),t._v(" "),s("li",[t._v("一个字节Byte由 8 位 组成，取值-128-127")]),t._v(" "),s("li",[t._v("一个字符占2个字节，所以由 16 位（比特）")])])]),t._v(" "),s("li",[s("p",[t._v("Java 流分为哪几类\n字节流，字符流")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("字节流父类： InputStream, OutputStream\n常用：ByteInputStream, BufferedInputStream,FileInputStream,SequenceInputStream，ObjectInputStream")])]),t._v(" "),s("li",[s("p",[t._v("字符流父类： Writer，Reader\n常用： BufferedReader,InputStreamReader,FileReader,StringReader")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("字节流 转 字符流")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStreamWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStreamReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("字符流 转 字节流，不存在的！！  原因：字节流应用广泛，字符流操作方便，一个操作更加方便的流为什么还有转换成不方便的？ 如果就是要转，刚开始就可以直接使用字节流操作，为何还有用字符流再转回字节流？")])])])]),t._v(" "),s("li",[s("p",[t._v("InputStream的 read() , read(byte[] b), 作用")]),t._v(" "),s("ul",[s("li",[t._v("read(): 一个字节一个字节读取，返回的是下一个字节的  int 类型，可以强整为 "),s("code",[t._v("char")]),t._v(" 查看 其原  字节， -1 表示已经读完")]),t._v(" "),s("li",[t._v("read(byte[] b): 将读取的字节存进这个缓冲数组,返回值，本次写入数组的字节个数， -1 如果读完")])])]),t._v(" "),s("li",[s("p",[t._v("readLine() 方法\nBufferedReader的方法，读取一行，返回 本次读取 String 数据，原理是 使用将字节转换成String，将String放进StringBuffer（线程安全）")])]),t._v(" "),s("li",[s("p",[t._v("为了提高读写性能，一般会采用 缓冲流 "),s("code",[t._v("BufferedXXX")])])]),t._v(" "),s("li",[s("p",[t._v("对 "),s("code",[t._v("基本数据类型")]),t._v("  包括 String 的读写，可以采用 "),s("code",[t._v("DataInputStream")]),t._v(" , "),s("code",[t._v("DataOutputStream")])])]),t._v(" "),s("li",[s("p",[t._v("RandomAccessFile, 只实现了 DataInput, DataOutput ，Closeable 接口，集 读取和输出功能为一身，可读取写入 基本数据类型的数据,也可以实现跳过的功能")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RandomAccessFile")]),t._v(" rw "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RandomAccessFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rw"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定打开文件的方式")]),t._v("\n        rw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\trw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("seek")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//跳过 100 个字节")]),t._v("\n        rw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeUTF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aaa"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        rw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);