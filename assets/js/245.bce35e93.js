(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{613:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1-2-gopath与工作空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-gopath与工作空间"}},[t._v("#")]),t._v(" 1.2 GOPATH与工作空间")]),t._v(" "),s("p",[t._v("前面我们在安装Go的时候看到需要设置GOPATH变量，Go从1.1版本到1.7必须设置这个变量，而且不能和Go的安装目录一样，这个目录用来存放Go源码，Go的可运行文件，以及相应的编译之后的包文件。所以这个目录下面有三个子目录：src、bin、pkg")]),t._v(" "),s("p",[t._v("从go 1.8开始，GOPATH环境变量现在有一个默认值，如果它没有被设置。 它在Unix上默认为$HOME/go,在Windows上默认为%USERPROFILE%/go。")]),t._v(" "),s("h2",{attrs:{id:"gopath设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gopath设置"}},[t._v("#")]),t._v(" GOPATH设置")]),t._v(" "),s("p",[t._v("go 命令依赖一个重要的环境变量：$GOPATH")]),t._v(" "),s("p",[t._v("Windows系统中环境变量的形式为"),s("code",[t._v("%GOPATH%")]),t._v("，本书主要使用Unix形式，Windows用户请自行替换。")]),t._v(" "),s("p",[s("em",[t._v("（注：这个不是Go安装目录。下面以笔者的工作目录为示例，如果你想不一样请把GOPATH替换成你的工作目录。）")])]),t._v(" "),s("p",[t._v("在类 Unix 环境下大概这样设置：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOPATH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/home/apple/mygo\n")])])]),s("p",[t._v("为了方便，应该新建以上文件夹，并且上一行加入到 "),s("code",[t._v(".bashrc")]),t._v(" 或者 "),s("code",[t._v(".zshrc")]),t._v(" 或者自己的 "),s("code",[t._v("sh")]),t._v(" 的配置文件中。")]),t._v(" "),s("p",[t._v("Windows 设置如下，新建一个环境变量名称叫做GOPATH：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOPATH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("mygo\n")])])]),s("p",[t._v("GOPATH允许多个目录，当有多个目录时，请注意分隔符，多个目录的时候Windows是分号，Linux系统是冒号，当有多个GOPATH时，默认会将go get的内容放在第一个目录下。")]),t._v(" "),s("p",[t._v("以上 $GOPATH 目录约定有三个子目录：")]),t._v(" "),s("ul",[s("li",[t._v("src 存放源代码（比如：.go .c .h .s等）")]),t._v(" "),s("li",[t._v("pkg 编译后生成的文件（比如：.a）")]),t._v(" "),s("li",[t._v("bin 编译后生成的可执行文件（为了方便，可以把此目录加入到 $PATH 变量中，如果有多个gopath，那么使用"),s("code",[t._v("${GOPATH//://bin:}/bin")]),t._v("添加所有的bin目录）")])]),t._v(" "),s("p",[t._v("以后我所有的例子都是以mygo作为我的gopath目录")]),t._v(" "),s("h2",{attrs:{id:"代码目录结构规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码目录结构规划"}},[t._v("#")]),t._v(" 代码目录结构规划")]),t._v(" "),s("p",[t._v("GOPATH下的src目录就是接下来开发程序的主要目录，所有的源码都是放在这个目录下面，那么一般我们的做法就是一个目录一个项目，例如: $GOPATH/src/mymath 表示mymath这个应用包或者可执行应用，这个根据package是main还是其他来决定，main的话就是可执行应用，其他的话就是应用包，这个会在后续详细介绍package。")]),t._v(" "),s("p",[t._v('所以当新建应用或者一个代码包时都是在src目录下新建一个文件夹，文件夹名称一般是代码包名称，当然也允许多级目录，例如在src下面新建了目录$GOPATH/src/github.com/astaxie/beedb 那么这个包路径就是"github.com/astaxie/beedb"，包名称是最后一个目录beedb')]),t._v(" "),s("p",[t._v("下面我就以mymath为例来讲述如何编写应用包，执行如下代码")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/src\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" mymath\n")])])]),s("p",[t._v("新建文件sqrt.go，内容如下")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $GOPATH/src/mymath/sqrt.go源码如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" mymath\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sqrt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" z\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样我的应用包目录和代码已经新建完毕，注意：一般建议package的名称和目录名保持一致")]),t._v(" "),s("h2",{attrs:{id:"编译应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译应用"}},[t._v("#")]),t._v(" 编译应用")]),t._v(" "),s("p",[t._v("上面我们已经建立了自己的应用包，如何进行编译安装呢？有两种方式可以进行安装")]),t._v(" "),s("p",[t._v("1、只要进入对应的应用包目录，然后执行"),s("code",[t._v("go install")]),t._v("，就可以安装了")]),t._v(" "),s("p",[t._v("2、在任意的目录执行如下代码"),s("code",[t._v("go install mymath")])]),t._v(" "),s("p",[t._v("安装完之后，我们可以进入如下目录")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/pkg/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GOOS}")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GOARCH}")]),t._v("\n//可以看到如下文件\nmymath.a\n")])])]),s("p",[t._v("这个.a文件是应用包，那么我们如何进行调用呢？")]),t._v(" "),s("p",[t._v("接下来我们新建一个应用程序来调用这个应用包")]),t._v(" "),s("p",[t._v("新建应用包mathapp")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/src\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" mathapp\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" mathapp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" main.go\n")])])]),s("p",[s("code",[t._v("$GOPATH/src/mathapp/main.go")]),t._v("源码：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mymath"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world.  Sqrt(2) = %v\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mymath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sqrt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以看到这个的package是"),s("code",[t._v("main")]),t._v("，import里面调用的包是"),s("code",[t._v("mymath")]),t._v(",这个就是相对于"),s("code",[t._v("$GOPATH/src")]),t._v("的路径，如果是多级目录，就在import里面引入多级目录，如果你有多个GOPATH，也是一样，Go会自动在多个"),s("code",[t._v("$GOPATH/src")]),t._v("中寻找。")]),t._v(" "),s("p",[t._v("如何编译程序呢？进入该应用目录，然后执行"),s("code",[t._v("go build")]),t._v("，那么在该目录下面会生成一个mathapp的可执行文件")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./mathapp\n")])])]),s("p",[t._v("输出如下内容")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("Hello, world.  Sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.414213562373095")]),t._v("\n")])])]),s("p",[t._v("如何安装该应用，进入该目录执行"),s("code",[t._v("go install")]),t._v(",那么在$GOPATH/bin/下增加了一个可执行文件mathapp, 还记得前面我们把"),s("code",[t._v("$GOPATH/bin")]),t._v("加到我们的PATH里面了，这样可以在命令行输入如下命令就可以执行")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("mathapp\n")])])]),s("p",[t._v("也是输出如下内容")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Hello, world.  Sqrt(2) = 1.414213562373095\n")])])]),s("p",[t._v("这里我们展示如何编译和安装一个可运行的应用，以及如何设计我们的目录结构。")]),t._v(" "),s("h2",{attrs:{id:"获取远程包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取远程包"}},[t._v("#")]),t._v(" 获取远程包")]),t._v(" "),s("p",[t._v("go语言有一个获取远程包的工具就是"),s("code",[t._v("go get")]),t._v("，目前go get支持多数开源社区(例如：GitHub、googlecode、bitbucket、Launchpad)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("go get github.com/astaxie/beedb\n")])])]),s("blockquote",[s("p",[t._v("go get -u 参数可以自动更新包，而且当go get的时候会自动获取该包依赖的其他第三方包")])]),t._v(" "),s("p",[t._v("通过这个命令可以获取相应的源码，对应的开源平台采用不同的源码控制工具，例如GitHub采用git、googlecode采用hg，所以要想获取这些源码，必须先安装相应的源码控制工具")]),t._v(" "),s("p",[t._v("通过上面获取的代码在我们本地的源码相应的代码结构如下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("$GOPATH\n  src\n   |--github.com\n\t\t  |-astaxie\n\t\t\t  |-beedb\n   pkg\n\t|--相应平台\n\t\t |-github.com\n\t\t\t   |--astaxie\n\t\t\t\t\t|beedb.a\n")])])]),s("p",[t._v("go get本质上可以理解为首先第一步是通过源码工具clone代码到src下面，然后执行"),s("code",[t._v("go install")])]),t._v(" "),s("p",[t._v("在代码中如何使用远程包，很简单的就是和使用本地包一样，只要在开头import相应的路径就可以")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('import "github.com/astaxie/beedb"\n')])])]),s("h2",{attrs:{id:"程序的整体结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序的整体结构"}},[t._v("#")]),t._v(" 程序的整体结构")]),t._v(" "),s("p",[t._v("通过上面建立的我本地的mygo的目录结构如下所示")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("bin/\n\tmathapp\npkg/\n\t平台名/ 如：darwin_amd64、linux_amd64\n\t\t mymath.a\n\t\t github.com/\n\t\t\t  astaxie/\n\t\t\t\t   beedb.a\nsrc/\n\tmathapp\n\t\t  main.go\n\tmymath/\n\t\t  sqrt.go\n\tgithub.com/\n\t\t   astaxie/\n\t\t\t\tbeedb/\n\t\t\t\t\tbeedb.go\n\t\t\t\t\tutil.go\n")])])]),s("p",[t._v("从上面的结构我们可以很清晰的看到，bin目录下面存的是编译之后可执行的文件，pkg下面存放的是应用包，src下面保存的是应用源代码")]),t._v(" "),s("h2",{attrs:{id:"links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/编程语言/Go/preface.html"}},[t._v("目录")])],1),t._v(" "),s("li",[t._v("上一节: "),s("RouterLink",{attrs:{to:"/编程语言/Go/01.1.html"}},[t._v("安装Go")])],1),t._v(" "),s("li",[t._v("下一节: "),s("RouterLink",{attrs:{to:"/编程语言/Go/01.3.html"}},[t._v("GO 命令")])],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);