(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{313:function(n,t,r){"use strict";r.r(t);var e=r(13),a=Object(e.a)({},(function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"什么是spring-data"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是spring-data"}},[n._v("#")]),n._v(" 什么是Spring Data")]),n._v(" "),r("p",[n._v("一个组件，可以让开发者快速实现各种数据库的操作，不用写多余的代码")]),n._v(" "),r("h2",{attrs:{id:"入门案例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#入门案例"}},[n._v("#")]),n._v(" 入门案例")]),n._v(" "),r("ol",[r("li",[n._v("maven")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("\t<dependencies>\n\n\t\t\x3c!--1. Spring Boot--\x3e\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n            <version>${boot.version}</version>\n\t\t</dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n            <version>${boot.version}</version>\n        </dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<version>${boot.version}</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\n        \x3c!--2. 数据库驱动--\x3e\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.40</version>\n        </dependency>\n\n        \x3c!--3. Spring Data--\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n            <version>${boot.version}</version>\n        </dependency>\n\n\n    </dependencies>\n\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n        </plugins>\n\t</build>\n")])])]),r("ol",{attrs:{start:"2"}},[r("li",[n._v("application.yml")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("server:\n  port: 8888\nspring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8\n    username: root\n    password: root\n    driver-class-name: com.mysql.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: update\n")])])]),r("ol",{attrs:{start:"3"}},[r("li",[n._v("JavaBean")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("\nimport javax.persistence.*;\n\n/**\n * 一定要写Entity、Table、主键id约束一定要写\n */\n@Entity\n@Table(name = \"t_user\")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private int id;\n    private String name;\n    private String  password;\n\n    public User() {\n    }\n\n    public User(int id, String name, String password) {\n        this.id = id;\n        this.name = name;\n        this.password = password;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n\n    @Override\n    public String toString() {\n        return \"User{\" +\n                \"id=\" + id +\n                \", name='\" + name + '\\'' +\n                \", password='\" + password + '\\'' +\n                '}';\n    }\n}\n")])])]),r("ol",{attrs:{start:"4"}},[r("li",[n._v("DAO")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("\nimport com.example.demo.entity.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface UserDAO  extends JpaRepository<User,Long> {\n\n}\n\n")])])]),r("ol",{attrs:{start:"5"}},[r("li",[n._v("Controller")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('@RestController\n@RequestMapping("user")\npublic class UserController {\n    @Autowired\n    private UserDAO userDAO;\n\n    @RequestMapping("")\n    public String index() {\n        return "Hello ";\n    }\n\n    @RequestMapping("list")\n    public Object list() {\n        return  userDAO.findAll();\n    }\n}\n')])])]),r("ol",{attrs:{start:"6"}},[r("li",[n._v("入口")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n\n")])])]),r("ol",{attrs:{start:"6"}},[r("li",[n._v("浏览器访问 "),r("code",[n._v("http://localhost:8889/user/list")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);