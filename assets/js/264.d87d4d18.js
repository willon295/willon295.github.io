(window.webpackJsonp=window.webpackJsonp||[]).push([[264],{580:function(t,a,r){"use strict";r.r(a);var e=r(13),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_4-表单"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-表单"}},[t._v("#")]),t._v(" 4 表单")]),t._v(" "),r("p",[t._v("表单是我们平常编写Web应用常用的工具，通过表单我们可以方便的让客户端和服务器进行数据的交互。对于以前开发过Web的用户来说表单都非常熟悉，但是对于C/C++程序员来说，这可能是一个有些陌生的东西，那么什么是表单呢？")]),t._v(" "),r("p",[t._v("表单是一个包含表单元素的区域。表单元素（比如：文本域、下拉列表、单选框、复选框等等）是允许用户在表单中输入信息的元素。表单使用表单标签（<form>）定义。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("<form>\n...\ninput 元素\n...\n</form>\n")])])]),r("p",[t._v("Go里面对于form处理已经有很方便的方法了，在Request里面有专门的form处理，可以很方便的整合到Web开发里面来，4.1小节里面将讲解Go如何处理表单的输入。由于不能信任任何用户的输入，所以我们需要对这些输入进行有效性验证，4.2小节将就如何进行一些普通的验证进行详细的演示。")]),t._v(" "),r("p",[t._v("HTTP协议是一种无状态的协议，那么如何才能辨别是否是同一个用户呢？同时又如何保证一个表单不出现多次递交的情况呢？4.3和4.4小节里面将对cookie(cookie是存储在客户端的信息，能够每次通过header和服务器进行交互的数据)等进行详细讲解。")]),t._v(" "),r("p",[t._v("表单还有一个很大的功能就是能够上传文件，那么Go是如何处理文件上传的呢？针对大文件上传我们如何有效的处理呢？4.5小节我们将一起学习Go处理文件上传的知识。")]),t._v(" "),r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("p",[r("img",{attrs:{src:"images/navi4.png?raw=true",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"links"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/编程语言/Go/preface.html"}},[t._v("目录")])],1),t._v(" "),r("li",[t._v("上一章: "),r("RouterLink",{attrs:{to:"/编程语言/Go/03.5.html"}},[t._v("第三章总结")])],1),t._v(" "),r("li",[t._v("下一节: "),r("RouterLink",{attrs:{to:"/编程语言/Go/04.1.html"}},[t._v("处理表单的输入")])],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);