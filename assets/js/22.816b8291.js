(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{328:function(a,e,t){"use strict";t.r(e);var s=t(13),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[a._v("#")]),a._v(" 准备")]),a._v(" "),t("ol",[t("li",[a._v("引入依赖")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("        \x3c!--2. 整合mybatis需要的依赖--\x3e\n\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mybatis.spring.boot</groupId>\n            <artifactId>mybatis-spring-boot-starter</artifactId>\n            <version>1.3.1</version>\n        </dependency>\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v("配置数据源")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("spring:\n  datasource:\n    url: jdbc:mysql://localhost/test?useSSL=false&useUnicode=true&characterEncoding=utf-8\n    driver-class-name: com.mysql.jdbc.Driver\n    username: root\n    password: root\n")])])]),t("h1",{attrs:{id:"全注解方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全注解方式"}},[a._v("#")]),a._v(" 全注解方式")]),a._v(" "),t("p",[a._v("Mapper的自动装配有几种方式：")]),a._v(" "),t("ol",[t("li",[a._v("每个 Mapper上使用 "),t("code",[a._v("@Mapper")]),a._v(" 注解")]),a._v(" "),t("li",[a._v("不用 @Mappr 注解 ， 在入口使用 "),t("code",[a._v('@MapperScan(basepackages="XXX")')]),a._v(" 指定Mapper位置")])]),a._v(" "),t("h2",{attrs:{id:"步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[a._v("#")]),a._v(" 步骤")]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("写Mapper")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('@Mapper\npublic interface UserMapper {\n\n    @Select("select * from t_user where  id = #{id}")\n    User findByid(int id);\n\n    @Select("select * from t_user where name = #{name}")\n    User findByName(String name);\n\n    @Insert("insert into t_user(age,name) values (#{age},#{name})")\n    void add(User user);\n\n    @Select(value = "select * from t_user")\n    List<User> findAll();\n}\n')])])]),t("h1",{attrs:{id:"xml-文件方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xml-文件方式"}},[a._v("#")]),a._v(" XML 文件方式")]),a._v(" "),t("ol",[t("li",[a._v("写接口,接口 "),t("code",[a._v("不需要任何注解")])]),a._v(" "),t("li",[a._v("写 XXmapper.xml 文件")]),a._v(" "),t("li",[a._v("配置文件，取别名，指定xml文件位置")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mybatis:\n  type-aliases-package: cn.willon.bean\n  mapper-locations: classpath:mapper/*.xml\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[a._v("在 入口处 使用 "),t("code",[a._v("@MapperScan")]),a._v(" 指定 "),t("code",[a._v("接口")]),a._v(" 地址")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('@MapperScan(basePackages ="cn.willon.dao" )\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);