(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{325:function(t,e,n){"use strict";n.r(e);var r=n(13),o=Object(r.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("ol",[e("li",[this._v("依赖、需要AOP，lombok")])]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.0.3.RELEASE</version>\n    </parent>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <version>1.18.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n    </dependencies>\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[this._v("自定义增强类")])]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('import lombok.extern.slf4j.Slf4j;\nimport org.aspectj.lang.JoinPoint;\nimport org.aspectj.lang.annotation.AfterReturning;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Before;\nimport org.aspectj.lang.annotation.Pointcut;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.util.Arrays;\nimport java.util.Enumeration;\n\n@Slf4j\n@Aspect\n@Component\npublic class WebLogAspect {\n\n    @Pointcut("execution(* cn.willon.controller..*.*(..))")\n    public void weblog() {\n    }\n    @Before("weblog()")\n    public void doBefore(JoinPoint joinPoint) {\n\n        HttpServletRequest request = ((ServletRequestAttributes)\n                RequestContextHolder.getRequestAttributes()).getRequest();\n\n        log.info("URL : " + request.getRequestURL().toString());\n        log.info("HTTP_METHOD : " + request.getMethod());\n        log.info("IP : " + request.getRemoteAddr());\n        log.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "." + joinPoint.getSignature\n                ().getName());\n        log.info("ARGS : " + Arrays.toString(joinPoint.getArgs()));\n\n        Enumeration<String> params = request.getParameterNames();\n        while (params.hasMoreElements()) {\n            String arg = params.nextElement();\n            log.info(arg + "=" + request.getParameter(arg));\n\n        }\n    }\n\n    @AfterReturning(returning = "res", pointcut = "weblog()")\n    public void doAfterReturning(Object res) {\n        HttpServletResponse response = ((ServletRequestAttributes)\n                RequestContextHolder.getRequestAttributes()).getResponse();\n        int status = response.getStatus();\n        log.info("STATUS : " + String.valueOf(status));\n        log.info("RESPONSE : " + res);\n    }\n}\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);