(window.webpackJsonp=window.webpackJsonp||[]).push([[306],{478:function(t,a,l){"use strict";l.r(a);var e=l(13),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,l=t._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"_10-国际化和本地化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_10-国际化和本地化"}},[t._v("#")]),t._v(" 10 国际化和本地化")]),t._v(" "),l("p",[t._v("为了适应经济的全球一体化，作为开发者，我们需要开发出支持多国语言、国际化的Web应用，即同样的页面在不同的语言环境下需要显示不同的效果，也就是说应用程序在运行时能够根据请求所来自的地域与语言的不同而显示不同的用户界面。这样，当需要在应用程序中添加对新的语言的支持时，无需修改应用程序的代码，只需要增加语言包即可实现。")]),t._v(" "),l("p",[t._v("国际化与本地化（Internationalization and localization,通常用i18n和L10N表示），国际化是将针对某个地区设计的程序进行重构，以使它能够在更多地区使用，本地化是指在一个面向国际化的程序中增加对新地区的支持。")]),t._v(" "),l("p",[t._v("目前，Go语言的标准包没有提供对i18n的支持，但有一些比较简单的第三方实现，这一章我们将实现一个go-i18n库，用来支持Go语言的i18n。")]),t._v(" "),l("p",[t._v("所谓的国际化：就是根据特定的locale信息，提取与之相应的字符串或其它一些东西（比如时间和货币的格式）等等。这涉及到三个问题：")]),t._v(" "),l("p",[t._v("1、如何确定locale。")]),t._v(" "),l("p",[t._v("2、如何保存与locale相关的字符串或其它信息。")]),t._v(" "),l("p",[t._v("3、如何根据locale提取字符串和其它相应的信息。")]),t._v(" "),l("p",[t._v("在第一小节里，我们将介绍如何设置正确的locale以便让访问站点的用户能够获得与其语言相应的页面。第二小节将介绍如何处理或存储字符串、货币、时间日期等与locale相关的信息，第三小节将介绍如何实现国际化站点，即如何根据不同locale返回不同合适的内容。通过这三个小节的学习，我们将获得一个完整的i18n方案。")]),t._v(" "),l("h2",{attrs:{id:"目录"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),l("p",[l("img",{attrs:{src:"images/navi10.png?raw=true",alt:""}})]),t._v(" "),l("h2",{attrs:{id:"links"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/编程语言/Go/preface.html"}},[t._v("目录")])],1),t._v(" "),l("li",[t._v("上一章: "),l("RouterLink",{attrs:{to:"/编程语言/Go/09.7.html"}},[t._v("第九章总结")])],1),t._v(" "),l("li",[t._v("下一节: "),l("RouterLink",{attrs:{to:"/编程语言/Go/10.1.html"}},[t._v("设置默认地区")])],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);