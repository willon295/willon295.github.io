(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{588:function(t,e,a){"use strict";a.r(e);var s=a(13),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"解决的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决的问题"}},[t._v("#")]),t._v(" 解决的问题")]),t._v(" "),a("p",[t._v("默认情况下，reduce输出的结果只有一个文件 "),a("code",[t._v("XXX-part-r-00000")]),t._v(" , 比如现在有一个需求：\n要处理的用户数据 "),a("code",[t._v("按电话号码所在区域")]),t._v("进行划分， "),a("code",[t._v("不同的省份")]),t._v(" 存储在 "),a("code",[t._v("不同的文件中")]),t._v("。")]),t._v(" "),a("h1",{attrs:{id:"hadoop的处理逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hadoop的处理逻辑"}},[t._v("#")]),t._v(" Hadoop的处理逻辑")]),t._v(" "),a("ol",[a("li",[t._v("默认reduce数量为 1")]),t._v(" "),a("li",[t._v("默认分区规则是 "),a("code",[t._v("HashPartitioner")]),t._v(" ， 源代码如下：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public  int  getPartition(K key,V value,int  numReduceTasks){\n\n\t//根据 key的 hashCode 模除 任务数，返回对应的分区\n\treturn (key.hashCode() & Integer.MAX_VALUE) % numReduceTasks;\n}\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("reduce处理结果生成的文件一般有 "),a("code",[t._v("numReduceTasks+1")]),t._v(" 个，一个是 "),a("code",[t._v("_SUCCESS")])])]),t._v(" "),a("h1",{attrs:{id:"自定义分区规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义分区规则"}},[t._v("#")]),t._v(" 自定义分区规则")]),t._v(" "),a("ol",[a("li",[t._v("继承 "),a("code",[t._v("Partitioner")]),t._v("类，重写 "),a("code",[t._v("getPartition()")]),t._v(" 方法（）")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class ProvincePartitioner extends Partitioner{\n\n\tpublic  int  getPartition(K key,V value,int  numPartitions){\n\t\n\t\t//分出3个分区\n\t\tpro=key.toString();\n\t\tif(pro.equals("136")){\n\t\t\treturn 0;\n\t\t}else if(ro.equals("138")){\n\t\t\treturn 1;\n\t\t}else{\n\t\t\treturn 2;\n\t\t}\n\t}\n\n}\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("任务提交处，使用 "),a("code",[t._v("自定义的 分区规则")]),t._v(",设置 "),a("code",[t._v("numReduceTasks 任务数量")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("job.setPatitionerClass(ProvincePartitioner.class);\njob.setNumReduceTasks(3);\n")])])]),a("blockquote",[a("p",[t._v("任务数量 "),a("code",[t._v("不能少于")]),t._v(" 分区规则分出后的分区数量")])])])}),[],!1,null,null,null);e.default=r.exports}}]);