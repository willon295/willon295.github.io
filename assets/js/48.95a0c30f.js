(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{361:function(v,_,r){"use strict";r.r(_);var a=r(13),t=Object(a.a)({},(function(){var v=this,_=v.$createElement,r=v._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("官方文档"),r("OutboundLink")],1)]),v._v(" "),r("h2",{attrs:{id:"jvm的组成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jvm的组成"}},[v._v("#")]),v._v(" JVM的组成")]),v._v(" "),r("p",[v._v("JVM主要有 :")]),v._v(" "),r("ol",[r("li",[v._v("类加载器")]),v._v(" "),r("li",[v._v("执行引擎")]),v._v(" "),r("li",[v._v("运行时数据区")])]),v._v(" "),r("h2",{attrs:{id:"运行时数据区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区"}},[v._v("#")]),v._v(" 运行时数据区")]),v._v(" "),r("p",[v._v("简单说就是 JVM 运行程序的时候是如何管理内存，指令，数据等")]),v._v(" "),r("p",[r("img",{attrs:{src:"/images/jvm.png",alt:""}})]),v._v(" "),r("h3",{attrs:{id:"数据区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据区"}},[v._v("#")]),v._v(" 数据区")]),v._v(" "),r("ul",[r("li",[v._v("堆： 存储对象实例，类变量， 线程共享，动态分配")]),v._v(" "),r("li",[v._v("方法区： 线程共享，存储类型信息，字段信息，方法信息，其他信息")])]),v._v(" "),r("h3",{attrs:{id:"指令区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指令区"}},[v._v("#")]),v._v(" 指令区")]),v._v(" "),r("ul",[r("li",[v._v("程序计数器： 记录当前线程执行的字节码 行号，控制语句依赖这个")]),v._v(" "),r("li",[v._v("本地方法栈： 调用底层C语言程序")]),v._v(" "),r("li",[v._v("虚拟机栈： 方法每执行一次，会创建 一个 "),r("code",[v._v("栈帧")]),v._v(" 用来存储本次方法执行所需资源，栈帧包括以下组件：\n"),r("ul",[r("li",[v._v("局部变量表： 用于 存储局部变量")]),v._v(" "),r("li",[v._v("操作数栈： 用于操作各个变量")]),v._v(" "),r("li",[v._v("动态链接： 动态链接到不同的实例对象==> Java的面向接口编程，多态等")]),v._v(" "),r("li",[v._v("出口： 程序退出的指令（ return）")])])])]),v._v(" "),r("h3",{attrs:{id:"堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[v._v("#")]),v._v(" 堆")]),v._v(" "),r("p",[v._v("堆大小 = 新生代(1/3) + 老年代(2/3)")]),v._v(" "),r("p",[v._v("1.8 之前")]),v._v(" "),r("ol",[r("li",[v._v("新生代 --  Eden ： Survivor0 ：  Survivor1 = 8:1:1 ( 可使用–XX:SurvivorRatio调节)---\x3e  Minor GC (次要的GC)")]),v._v(" "),r("li",[v._v("老年代 --  Tenured --\x3e FULL(Major) GC （主要GC）")]),v._v(" "),r("li",[v._v("永久带 --  Permanent -- 满了之后 JVM回去停止工作，执行 FULL GC")])]),v._v(" "),r("p",[v._v("1.8 之后")]),v._v(" "),r("ol",[r("li",[v._v("新生带")]),v._v(" "),r("li",[v._v("老年代")]),v._v(" "),r("li",[v._v("Meta Space -- 可自动扩容")])]),v._v(" "),r("h2",{attrs:{id:"内存模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存模型"}},[v._v("#")]),v._v(" 内存模型")]),v._v(" "),r("ol",[r("li",[r("code",[v._v("主内存")]),v._v(" (存放的是static, 共享的数据, 存放在永久带)")]),v._v(" "),r("li",[v._v("线程私有的 "),r("code",[v._v("本地内存")])])]),v._v(" "),r("p",[v._v("当多线程 访问 "),r("code",[v._v("共享 数据")]),v._v(" 时,  会从 "),r("code",[v._v("主存")]),v._v(" 中复制一份 "),r("code",[v._v("副本")]),v._v("到 "),r("code",[v._v("本地内存")])]),v._v(" "),r("h2",{attrs:{id:"gc-触发条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gc-触发条件"}},[v._v("#")]),v._v(" GC 触发条件")]),v._v(" "),r("p",[v._v("回收算法：")]),v._v(" "),r("ol",[r("li",[v._v("标记不再被使用的内存")]),v._v(" "),r("li",[v._v("删除被标记的内存")]),v._v(" "),r("li",[v._v("将剩余的内存压缩")])]),v._v(" "),r("h3",{attrs:{id:"minor-gc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#minor-gc"}},[v._v("#")]),v._v(" Minor GC")]),v._v(" "),r("p",[v._v("所有对象的创建都会在  "),r("code",[v._v("Eden")]),v._v(" 区， 所以： "),r("code",[v._v("Eden")]),v._v(" 区满了之后， 会触发 Minor GC\n触发之后干什么？")]),v._v(" "),r("ol",[r("li",[v._v("如果对象不可达，回收； 如果对象还需要被使用，将 Eden，Survivor0 区域的该对象复制到  "),r("code",[v._v("Survivor1")])]),v._v(" "),r("li",[v._v("如果 "),r("code",[v._v("Survivor1")]),v._v(" 满了之后，会把数据复制到 老年代")]),v._v(" "),r("li",[v._v("Eden，Survivor0 会被清空")])]),v._v(" "),r("h3",{attrs:{id:"full-gc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#full-gc"}},[v._v("#")]),v._v(" FULL GC")]),v._v(" "),r("ul",[r("li",[v._v("System.gc()")]),v._v(" "),r("li",[v._v("老年代空间不足")]),v._v(" "),r("li",[v._v("方法区空间不足")]),v._v(" "),r("li",[v._v("从 Survivor1 区复制对象到 Old 区时， Old区空间不够\n触发后干什么？  "),r("code",[v._v("清理整个 堆")])])]),v._v(" "),r("h2",{attrs:{id:"jvm调节参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jvm调节参数"}},[v._v("#")]),v._v(" JVM调节参数")]),v._v(" "),r("h3",{attrs:{id:"栈、堆设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈、堆设置"}},[v._v("#")]),v._v(" 栈、堆设置")]),v._v(" "),r("ul",[r("li",[r("strong",[v._v("-Xss128k")]),v._v("  : 设置每个线程的  "),r("code",[v._v("栈帧")]),v._v("  大小为128k")]),v._v(" "),r("li",[r("strong",[v._v("-Xms")]),v._v(" : 初始  "),r("code",[v._v("堆")]),v._v(" 大小, 同 "),r("code",[v._v("-XX:InitialHeapSize")])]),v._v(" "),r("li",[r("strong",[v._v("-Xmx")]),v._v(" :  "),r("code",[v._v("堆")]),v._v(" 最大值 , 同 "),r("code",[v._v("-XX:MaxHeapSize")])]),v._v(" "),r("li",[r("strong",[v._v("-Xmn")]),v._v(" :  "),r("code",[v._v("年轻带")]),v._v(" 大小 , 同 "),r("code",[v._v("-XX:NewSize")])]),v._v(" "),r("li",[r("strong",[v._v("-XX:NewRatio")]),v._v(" : 设置新生代 和 老代的大小比例 "),r("code",[v._v("-XX:NewRatio=4")]),v._v("  年轻带/老年代 = 1/4")]),v._v(" "),r("li",[r("strong",[v._v("-XX:SurvivorRatio")]),v._v(" ： Survivor/Eden 的比例 "),r("code",[v._v("-XX:SurvivorRatio=8")]),v._v("  s0/s1/eden = 1/1/8")])]),v._v(" "),r("blockquote",[r("p",[v._v("建议 把 -Xms  -Xmx 设置成相同的值， 减少 JVM动态调节频率")])]),v._v(" "),r("h3",{attrs:{id:"gc设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gc设置"}},[v._v("#")]),v._v(" GC设置")]),v._v(" "),r("ul",[r("li",[r("strong",[v._v("-XX:+UseSerialGC")]),v._v(" ： 使用串行收集器")]),v._v(" "),r("li",[r("strong",[v._v("-XX:+UseParallelGC")]),v._v("： 使用并行收集器")]),v._v(" "),r("li",[r("strong",[v._v("-XX:+UseParalledlOldGC")]),v._v(" ： 使用 并行 老代收集器")]),v._v(" "),r("li",[r("strong",[v._v("-XX:+UseConcMarkSweepGC")]),v._v(" ： 使用 并发收集器")])]),v._v(" "),r("h3",{attrs:{id:"并行收集器设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并行收集器设置"}},[v._v("#")]),v._v(" 并行收集器设置")]),v._v(" "),r("ul",[r("li",[r("strong",[v._v("-XX:ParallelGCThreads=n")]),v._v("： 使用的线程数")]),v._v(" "),r("li",[r("strong",[v._v("-XX:MaxGCPauseMillis=n")]),v._v(": 最大暂停时间")]),v._v(" "),r("li",[r("strong",[v._v("-XX:GCTimeRatio=n")]),v._v(" ： 回收时间占程序运行时间比  （1/(n+1)）")])]),v._v(" "),r("h3",{attrs:{id:"并发收集器设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并发收集器设置"}},[v._v("#")]),v._v(" 并发收集器设置")]),v._v(" "),r("ul",[r("li",[r("strong",[v._v("-XX:+CMSIncrementalMode")]),v._v(": 增量模式")]),v._v(" "),r("li",[r("strong",[v._v("-XX:ParallelGCThreads=n")]),v._v(" ： 线程数")])])])}),[],!1,null,null,null);_.default=t.exports}}]);