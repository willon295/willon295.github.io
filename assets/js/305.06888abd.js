(window.webpackJsonp=window.webpackJsonp||[]).push([[305],{481:function(t,e,s){"use strict";s.r(e);var a=s(13),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_9-7-小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-小结"}},[t._v("#")]),t._v(" 9.7 小结")]),t._v(" "),s("p",[t._v("这一章主要介绍了如：CSRF攻击、XSS攻击、SQL注入攻击等一些Web应用中典型的攻击手法，它们都是由于应用对用户的输入没有很好的过滤引起的，所以除了介绍攻击的方法外，我们也介绍了了如何有效的进行数据过滤，以防止这些攻击的发生的方法。然后针对日异严重的密码泄漏事件，介绍了在设计Web应用中可采用的从基本到专家的加密方案。最后针对敏感数据的加解密简要介绍了，Go语言提供三种对称加密算法：base64、aes和des的实现。")]),t._v(" "),s("p",[t._v("编写这一章的目的是希望读者能够在意识里面加强安全概念，在编写Web应用的时候多留心一点，以使我们编写的Web应用能远离黑客们的攻击。Go语言在支持防攻击方面已经提供大量的工具包，我们可以充分的利用这些包来做出一个安全的Web应用。")]),t._v(" "),s("h2",{attrs:{id:"links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/编程语言/Go/preface.html"}},[t._v("目录")])],1),t._v(" "),s("li",[t._v("上一节: "),s("RouterLink",{attrs:{to:"/编程语言/Go/09.6.html"}},[t._v("加密和解密数据")])],1),t._v(" "),s("li",[t._v("下一节: "),s("RouterLink",{attrs:{to:"/编程语言/Go/10.0.html"}},[t._v("国际化和本地化")])],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);