(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{527:function(a,t,s){"use strict";s.r(t);var e=s(13),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"什么是-awk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-awk"}},[a._v("#")]),a._v(" 什么是 awk")]),a._v(" "),s("p",[a._v("AWK是一种处理文本文件的语言，是一个强大的文本分析工具。")]),a._v(" "),s("h1",{attrs:{id:"awk命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk命令"}},[a._v("#")]),a._v(" awk命令")]),a._v(" "),s("h2",{attrs:{id:"基本说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本说明"}},[a._v("#")]),a._v(" 基本说明")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk [参数]  '{语句}'  操作文件\n")])])]),s("ol",[s("li",[a._v("参数\n"),s("ul",[s("li",[s("code",[a._v("-F")]),a._v(" ： 指定分割符，如： "),s("code",[a._v("awk -F',' '{print $1,$2}' a.txt")]),a._v(" => 用逗号分割")]),a._v(" "),s("li",[s("code",[a._v("-v")]),a._v(": 指定变量，如： "),s("code",[a._v("awk -va=10 '{print $1+a}' a.txt")]),a._v("  => 指定一个变量 a=10")]),a._v(" "),s("li",[s("code",[a._v("-f")]),a._v(" : 读取另一个 "),s("code",[a._v("awk脚本")]),a._v(" ，如： "),s("code",[a._v("awk -f 'aa.awk' '{print $1}' a.txt")])])])]),a._v(" "),s("li",[a._v("语句解释\n"),s("ul",[s("li",[s("code",[a._v("print")]),a._v("： 终端打印，可以用 ',' 分割要输出的多个内容，输出的内容以空格分开")]),a._v(" "),s("li",[s("code",[a._v("$0")]),a._v(": 读取到完整的内容")]),a._v(" "),s("li",[s("code",[a._v("$n")]),a._v(": n 代表 1,2,3,4.... 表示分割后的第 n 个字段")])])]),a._v(" "),s("li",[a._v("内置变量\n|变量|含义|\n|----|----|\n|$0  |  完整的输入记录  |\n| $n |  当前记录的第n个字段，字段间由FS分隔  |\n| FILENAME |  当前文件名  |\n|  NF | 一条记录的字段数   |\n|  NR  | 当前行号   |\n|  FS  |    字段分隔符 |\n|  OFS  |   输出记录字段间分隔符 |")])]),a._v(" "),s("h2",{attrs:{id:"正则-字符串匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则-字符串匹配"}},[a._v("#")]),a._v(" 正则，字符串匹配")]),a._v(" "),s("ol",[s("li",[a._v("正常的匹配")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk '内容  ～  /正则/  {语句} ' 文件\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("忽略大小写")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk 'BEGIN{IGNORECASE=1}  /t/ ' passwd\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("模式取反")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk '内容  !~  /正则/  {语句} ' 文件\nawk '!/正则/  {语句} ' 文件\n")])])]),s("p",[a._v("4.解释：\n- 内容： 要匹配的字段=> $2\n- "),s("code",[a._v("~")]),a._v(": 模式匹配开始\n- "),s("code",[a._v("//")]),a._v("： 要匹配的字符表达式")]),a._v(" "),s("h3",{attrs:{id:"简单实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单实例"}},[a._v("#")]),a._v(" 简单实例")]),a._v(" "),s("p",[s("code",[a._v("num.txt")]),a._v(" 文件内容为 1-100 数字")]),a._v(" "),s("ol",[s("li",[a._v("将文件每个数字加10,打印")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk  -va=10   '{print $1+a}' num.txt\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("获取Linux系统所有用户的用户名和家目录")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk -F':'  '{print $1,$6 }'  /etc/passwd\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("显示第 20到30行的文本信息")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk '{if( NR>=20 && NR<=30 ) print $1}' /etc/passwd\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("查找用户名含有 't' 的用户名及家目录")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk  -F: '$1 ~ /t/  {print $1,$6}' /etc/passwd \n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("将所有用户名及其家目录用 => 分割输出")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk  -F: '  {print $1,$6}' OFS='=>' passwd\n")])])]),s("h1",{attrs:{id:"awk脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk脚本"}},[a._v("#")]),a._v(" awk脚本")]),a._v(" "),s("p",[a._v("一个简单脚本定义如下：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('#！/bin/awk -f\n\n#运行前\nBEGIN{\n\tpi=3.14\n\tr=4\n\ts=0\n\tprintf "This is the begin line"\n}\n\n#运行中\n{\n\n\tr+=$1\n\ts=pi*r*r\n\n}\n\n#运行后\nEND{\n\tprint  "Result:",r,s\n\tprintf "This is the  end line"\n}\n')])])]),s("h1",{attrs:{id:"awk-简单实现-wordcount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk-简单实现-wordcount"}},[a._v("#")]),a._v(" awk 简单实现 wordcount")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk -F\" \"  '{for(i=1;i<=NF;i++) print $i}' ./* | sort | uniq  -c | awk '{print $2,$1}' | cat >> ../out1/res.txt\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);