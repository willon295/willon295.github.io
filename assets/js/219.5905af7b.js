(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{609:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_02-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02-dockerfile"}},[t._v("#")]),t._v(" 02-DockerFile")]),t._v(" "),s("p",[t._v("Dockerfile 是一个文本文件,  内容是定义一个 Docker镜像如可创建, 可以dockerfile创建自定义Docker镜像;")]),t._v(" "),s("ul",[s("li",[t._v("该文件中所有命令, 从上到下依次执行")]),t._v(" "),s("li")]),t._v(" "),s("h2",{attrs:{id:"dockerfile文件结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile文件结构"}},[t._v("#")]),t._v(" Dockerfile文件结构")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("FROM\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#基础镜像,当前镜像基于哪个镜像?")]),t._v("\nMAINTAINER\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#维护者信息")]),t._v("\nRUN\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器 构建时 需要执行的命令")]),t._v("\nEXPOSE\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器 启动之后 对外暴露的端口号")]),t._v("\nWORKDIR\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器 创建之后, 终端登录容器时,所在路径.默认是/根目录")]),t._v("\nENV\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器 创建时,创建环境变量, 相当于linux的 set|export环境变量, 且此变量在RUN命令中可以通过 $变量名称 引用")]),t._v("\nCOPY\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从构建上下文路径, 拷贝一份到镜像内路径")]),t._v("\nADD\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类似于COPY,但是会自动处理URL,和解压tar压缩包文件")]),t._v("\nVOLUME\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器内数据卷,用于容器存储数据")]),t._v("\nCMD\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器 启动时 (docker run) ,该容器 需要执行的命令,只有最后一个生效,CMD会被docker run 参数替换")]),t._v("\nENTRYPOINT\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器 启东市 需要执行的命令,不会被docker run参数替换")]),t._v("\nONBUILD\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#写在父镜像dockerfile中, 当子容器 构建时,父镜这条命令被触发")]),t._v("\n")])])]),s("h2",{attrs:{id:"demo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),s("p",[t._v("本demo为编写一个有vim和ifconfig的centos镜像")]),t._v(" "),s("h3",{attrs:{id:"编写dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写dockerfile"}},[t._v("#")]),t._v(" 编写Dockerfile")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("FROM centos\nMAINTAINER  willon"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("willon295@gmail.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nENV MYPATH /root\nWORKDIR "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MYPATH")]),t._v("\nRUN  yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v("\nRUN  yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" net-tools\n\nEXPOSE "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\nCMD "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MYPATH")]),t._v("\n\nCMD "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello -------"')]),t._v("\n\nCMD /bin/bash\n\n")])])]),s("h3",{attrs:{id:"build镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build镜像"}},[t._v("#")]),t._v(" build镜像")]),t._v(" "),s("p",[t._v("使用命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker  build  -f Dockerfile  -t  mycentos:1.0    ./\n")])])]),s("p",[t._v("运行完毕之后 , 可以通过 "),s("code",[t._v("docker images 查看")])]),t._v(" "),s("h3",{attrs:{id:"运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[t._v("#")]),t._v(" 运行")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run   mycentos-1.0\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);