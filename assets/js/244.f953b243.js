(window.webpackJsonp=window.webpackJsonp||[]).push([[244],{300:function(a,s,t){"use strict";t.r(s);var e=t(13),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_1-1安装-go"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1安装-go"}},[a._v("#")]),a._v(" 1.1安装 Go")]),a._v(" "),t("h2",{attrs:{id:"go的三种安装方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go的三种安装方式"}},[a._v("#")]),a._v(" Go的三种安装方式")]),a._v(" "),t("p",[a._v("Go有多种安装方式，你可以选择自己喜欢的。这里我们介绍三种最常见的安装方式：")]),a._v(" "),t("ul",[t("li",[a._v("Go源码安装：这是一种标准的软件安装方式。对于经常使用Unix类系统的用户，尤其对于开发者来说，从源码安装可以自己定制。")]),a._v(" "),t("li",[a._v("Go标准包安装：Go提供了方便的安装包，支持Windows、Linux、Mac等系统。这种方式适合快速安装，可根据自己的系统位数下载好相应的安装包，一路next就可以轻松安装了。"),t("strong",[a._v("推荐这种方式")])]),a._v(" "),t("li",[a._v("第三方工具安装：目前有很多方便的第三方软件包工具，例如Ubuntu的apt-get和wget、Mac的homebrew等。这种安装方式适合那些熟悉相应系统的用户。")])]),a._v(" "),t("p",[a._v("最后，如果你想在同一个系统中安装多个版本的Go，你可以参考第三方工具"),t("a",{attrs:{href:"https://github.com/moovweb/gvm",target:"_blank",rel:"noopener noreferrer"}},[a._v("GVM"),t("OutboundLink")],1),a._v("，这是目前在这方面做得最好的工具，除非你知道怎么处理。")]),a._v(" "),t("h2",{attrs:{id:"go源码安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go源码安装"}},[a._v("#")]),a._v(" Go源码安装")]),a._v(" "),t("p",[a._v("Go 1.5彻底移除C代码，Runtime、Compiler、Linker均由Go编写,实现自举。只需要安装了上一个版本,即可从源码安装。")]),a._v(" "),t("p",[a._v("在Go 1.5前,Go的源代码中，有些部分是用Plan 9 C和AT&T汇编写的，因此假如你要想从源码安装，就必须安装C的编译工具。")]),a._v(" "),t("p",[a._v("在Mac系统中，只要你安装了Xcode，就已经包含了相应的编译工具。")]),a._v(" "),t("p",[a._v("在类Unix系统中，需要安装gcc等工具。例如Ubuntu系统可通过在终端中执行"),t("code",[a._v("sudo apt-get install gcc libc6-dev")]),a._v("来安装编译工具。")]),a._v(" "),t("p",[a._v("在Windows系统中，你需要安装MinGW，然后通过MinGW安装gcc，并设置相应的环境变量。")]),a._v(" "),t("p",[a._v("你可以直接去官网"),t("a",{attrs:{href:"http://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"}},[a._v("下载源码"),t("OutboundLink")],1),a._v("，找相应的"),t("code",[a._v("goVERSION.src.tar.gz")]),a._v("的文件下载，下载之后解压缩到"),t("code",[a._v("$HOME")]),a._v("目录，执行如下代码：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("cd go/src\n./all.bash\n")])])]),t("p",[a._v('运行all.bash后出现"ALL TESTS PASSED"字样时才算安装成功。')]),a._v(" "),t("p",[a._v("上面是Unix风格的命令，Windows下的安装方式类似，只不过是运行"),t("code",[a._v("all.bat")]),a._v("，调用的编译器是MinGW的gcc。")]),a._v(" "),t("p",[a._v("如果是Mac或者Unix用户需要设置几个环境变量，如果想重启之后也能生效的话把下面的命令写到"),t("code",[a._v(".bashrc")]),a._v("或者"),t("code",[a._v(".zshrc")]),a._v("里面，")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("export GOPATH=$HOME/gopath\nexport PATH=$PATH:$HOME/go/bin:$GOPATH/bin\n")])])]),t("p",[a._v("如果你是写入文件的，记得执行"),t("code",[a._v("bash .bashrc")]),a._v("或者"),t("code",[a._v("bash .zshrc")]),a._v("使得设置立马生效。")]),a._v(" "),t("p",[a._v("如果是window系统，就需要设置环境变量，在path里面增加相应的go所在的目录，设置gopath变量。")]),a._v(" "),t("p",[a._v("当你设置完毕之后在命令行里面输入"),t("code",[a._v("go")]),a._v("，看到如下图片即说明你已经安装成功")]),a._v(" "),t("p",[t("img",{attrs:{src:"images/1.1.mac.png?raw=true",alt:""}})]),a._v(" "),t("p",[a._v("图1.1 源码安装之后执行Go命令的图")]),a._v(" "),t("p",[a._v("如果出现Go的Usage信息，那么说明Go已经安装成功了；如果出现该命令不存在，那么可以检查一下自己的PATH环境变中是否包含了Go的安装目录。")]),a._v(" "),t("p",[a._v("从go 1.8开始，GOPATH环境变量现在有一个默认值，如果它没有被设置。 它在Unix上默认为$HOME/go,在Windows上默认为%USERPROFILE%/go。")]),a._v(" "),t("blockquote",[t("p",[a._v("关于上面的GOPATH将在下面小节详细讲解")])]),a._v(" "),t("h2",{attrs:{id:"go标准包安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go标准包安装"}},[a._v("#")]),a._v(" Go标准包安装")]),a._v(" "),t("p",[a._v("Go提供了每个平台打好包的一键安装，这些包默认会安装到如下目录：/usr/local/go (Windows系统：c:\\Go)，当然你可以改变他们的安装位置，但是改变之后你必须在你的环境变量中设置如下信息：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("export GOROOT=$HOME/go  \nexport GOPATH=$HOME/gopath\nexport PATH=$PATH:$GOROOT/bin:$GOPATH/bin\n")])])]),t("p",[a._v("上面这些命令对于Mac和Unix用户来说最好是写入"),t("code",[a._v(".bashrc")]),a._v("或者"),t("code",[a._v(".zshrc")]),a._v("文件，对于windows用户来说当然是写入环境变量。")]),a._v(" "),t("h3",{attrs:{id:"如何判断自己的操作系统是32位还是64位"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何判断自己的操作系统是32位还是64位"}},[a._v("#")]),a._v(" 如何判断自己的操作系统是32位还是64位？")]),a._v(" "),t("p",[a._v("我们接下来的Go安装需要判断操作系统的位数，所以这小节我们先确定自己的系统类型。")]),a._v(" "),t("p",[a._v("Windows系统用户请按Win+R运行cmd，输入"),t("code",[a._v("systeminfo")]),a._v("后回车，稍等片刻，会出现一些系统信息。在“系统类型”一行中，若显示“x64-based PC”，即为64位系统；若显示“X86-based PC”，则为32位系统。")]),a._v(" "),t("p",[a._v("Mac系统用户建议直接使用64位的，因为Go所支持的Mac OS X版本已经不支持纯32位处理器了。")]),a._v(" "),t("p",[a._v("Linux系统用户可通过在Terminal中执行命令"),t("code",[a._v("arch")]),a._v("(即"),t("code",[a._v("uname -m")]),a._v(")来查看系统信息：")]),a._v(" "),t("p",[a._v("64位系统显示")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("x86_64\n")])])]),t("p",[a._v("32位系统显示")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("i386\n")])])]),t("h3",{attrs:{id:"mac-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac-安装"}},[a._v("#")]),a._v(" Mac 安装")]),a._v(" "),t("p",[a._v("访问"),t("a",{attrs:{href:"http://golang.org/dl/",title:"Go安装包下载",target:"_blank",rel:"noopener noreferrer"}},[a._v("下载地址"),t("OutboundLink")],1),a._v("，32位系统下载go1.4.2.darwin-386-osx10.8.pkg(更新的版本已无32位下载)，64位系统下载go1.8.3.darwin-amd64.pkg，双击下载文件，一路默认安装点击下一步，这个时候go已经安装到你的系统中，默认已经在PATH中增加了相应的"),t("code",[a._v("~/go/bin")]),a._v(",这个时候打开终端，输入"),t("code",[a._v("go")])]),a._v(" "),t("p",[a._v("看到类似上面源码安装成功的图片说明已经安装成功")]),a._v(" "),t("p",[a._v("如果出现go的Usage信息，那么说明go已经安装成功了；如果出现该命令不存在，那么可以检查一下自己的PATH环境变中是否包含了go的安装目录。")]),a._v(" "),t("h3",{attrs:{id:"linux-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-安装"}},[a._v("#")]),a._v(" Linux 安装")]),a._v(" "),t("p",[a._v("访问"),t("a",{attrs:{href:"http://golang.org/dl/",title:"Go安装包下载",target:"_blank",rel:"noopener noreferrer"}},[a._v("下载地址"),t("OutboundLink")],1),a._v("，32位系统下载go1.8.3.linux-386.tar.gz，64位系统下载go1.8.3.linux-amd64.tar.gz，")]),a._v(" "),t("p",[a._v("假定你想要安装Go的目录为 "),t("code",[a._v("$GO_INSTALL_DIR")]),a._v("，后面替换为相应的目录路径。")]),a._v(" "),t("p",[a._v("解压缩"),t("code",[a._v("tar.gz")]),a._v("包到安装目录下："),t("code",[a._v("tar zxvf go1.8.3.linux-amd64.tar.gz -C $GO_INSTALL_DIR")]),a._v("。")]),a._v(" "),t("p",[a._v("设置PATH，"),t("code",[a._v("export PATH=$PATH:$GO_INSTALL_DIR/go/bin")])]),a._v(" "),t("p",[a._v("然后执行"),t("code",[a._v("go")])]),a._v(" "),t("p",[t("img",{attrs:{src:"images/1.1.linux.png?raw=true",alt:""}})]),a._v(" "),t("p",[a._v("图1.2 Linux系统下安装成功之后执行go显示的信息")]),a._v(" "),t("p",[a._v("如果出现go的Usage信息，那么说明go已经安装成功了；如果出现该命令不存在，那么可以检查一下自己的PATH环境变中是否包含了go的安装目录。")]),a._v(" "),t("h3",{attrs:{id:"windows-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows-安装"}},[a._v("#")]),a._v(" Windows 安装")]),a._v(" "),t("p",[a._v("访问"),t("a",{attrs:{href:"http://golang.org/dl/",title:"Go安装包下载",target:"_blank",rel:"noopener noreferrer"}},[a._v("Golang 下载页"),t("OutboundLink")],1),a._v("，32 位请选择名称中包含 windows-386 的 msi 安装包，64 位请选择名称中包含 windows-amd64 的。下载好后运行，不要修改默认安装目录 C:\\Go\\，若安装到其他位置会导致不能执行自己所编写的 Go 代码。安装完成后默认会在环境变量 Path 后添加 Go 安装目录下的 bin 目录 "),t("code",[a._v("C:\\Go\\bin\\")]),a._v("，并添加环境变量 GOROOT，值为 Go 安装根目录 "),t("code",[a._v("C:\\Go\\")]),a._v(" 。")]),a._v(" "),t("p",[t("strong",[a._v("验证是否安装成功")])]),a._v(" "),t("p",[a._v("在运行中输入 "),t("code",[a._v("cmd")]),a._v(" 打开命令行工具，在提示符下输入 "),t("code",[a._v("go")]),a._v("，检查是否能看到 Usage 信息。输入 "),t("code",[a._v("cd %GOROOT%")]),a._v("，看是否能进入 Go 安装目录。若都成功，说明安装成功。")]),a._v(" "),t("p",[a._v("不能的话请检查上述环境变量 Path 和 GOROOT 的值。若不存在请卸载后重新安装，存在请重启计算机后重试以上步骤。")]),a._v(" "),t("h2",{attrs:{id:"第三方工具安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三方工具安装"}},[a._v("#")]),a._v(" 第三方工具安装")]),a._v(" "),t("h3",{attrs:{id:"gvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gvm"}},[a._v("#")]),a._v(" GVM")]),a._v(" "),t("p",[a._v("gvm是第三方开发的Go多版本管理工具，类似ruby里面的rvm工具。使用起来相当的方便，安装gvm使用如下命令：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("安装完成后我们就可以安装go了：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("\ngvm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" go1.8.3\ngvm use go1.8.3\n")])])]),t("p",[a._v("也可以使用下面的命令，省去每次调用gvm use的麻烦：\ngvm use go1.8.3 --default")]),a._v(" "),t("p",[a._v("执行完上面的命令之后GOPATH、GOROOT等环境变量会自动设置好，这样就可以直接使用了。")]),a._v(" "),t("h3",{attrs:{id:"apt-get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apt-get"}},[a._v("#")]),a._v(" apt-get")]),a._v(" "),t("p",[a._v("Ubuntu是目前使用最多的Linux桌面系统，使用"),t("code",[a._v("apt-get")]),a._v("命令来管理软件包，我们可以通过下面的命令来安装Go，为了以后方便，应该把 "),t("code",[a._v("git")]),a._v(" "),t("code",[a._v("mercurial")]),a._v(" 也安装上：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" python-software-properties\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" add-apt-repository ppa:gophers/go\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" golang-stable git-core mercurial\n")])])]),t("h3",{attrs:{id:"wget"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wget"}},[a._v("#")]),a._v(" wget")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xzf")]),a._v(" go1.8.3.linux-amd64.tar.gz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" /usr/local \n")])])]),t("p",[a._v("配置环境变量:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOROOT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/go\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOBIN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOROOT")]),a._v("/bin\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOBIN")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/gopath "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("可选设置"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("或者使用:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/profile \n")])])]),t("p",[a._v("并添加下面的内容：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOROOT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/go\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOBIN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOROOT")]),a._v("/bin\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOBIN")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/gopath "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("可选设置"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("重新加载 profile 文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" /etc/profile \n")])])]),t("h3",{attrs:{id:"homebrew"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homebrew"}},[a._v("#")]),a._v(" homebrew")]),a._v(" "),t("p",[a._v("homebrew是Mac系统下面目前使用最多的管理软件的工具，目前已支持Go，可以通过命令直接安装Go，为了以后方便，应该把 "),t("code",[a._v("git")]),a._v(" "),t("code",[a._v("mercurial")]),a._v(" 也安装上：")]),a._v(" "),t("p",[a._v("1.安装homebrew")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("/usr/bin/ruby "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fsSL")]),a._v(" https://raw.githubusercontent.com/Homebrew/install/master/install"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n")])])]),t("p",[a._v("2.安装go")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("\nbrew update "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" brew upgrade\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" go\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v("\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" mercurial //可选安装\n")])])]),t("h2",{attrs:{id:"links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[a._v("#")]),a._v(" links")]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/编程语言/Go/preface.html"}},[a._v("目录")])],1),a._v(" "),t("li",[a._v("上一节: "),t("RouterLink",{attrs:{to:"/编程语言/Go/01.0.html"}},[a._v("Go环境配置")])],1),a._v(" "),t("li",[a._v("下一节: "),t("RouterLink",{attrs:{to:"/编程语言/Go/01.2.html"}},[a._v("GOPATH 与工作空间")])],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);