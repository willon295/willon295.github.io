(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{612:function(a,t,e){"use strict";e.r(t);var r=e(13),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),e("p",[a._v('Docker是虚拟机的替代品, 是21世纪较为完善 "虚拟化技术".')]),a._v(" "),e("h2",{attrs:{id:"传统vm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#传统vm"}},[a._v("#")]),a._v(" 传统VM")]),a._v(" "),e("p",[a._v("传统VM是一个完整的系统,每个VM需要从 "),e("code",[a._v("宿主机")]),a._v("  分配资源(网络/硬盘/内存/CPU等等). 每个VM又有自己的 "),e("code",[a._v("操作系统")]),a._v(", 资源占用较高. 正因如此,启动一个VM过程较为缓慢")]),a._v(" "),e("h2",{attrs:{id:"docker-优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-优势"}},[a._v("#")]),a._v(" Docker 优势")]),a._v(" "),e("p",[a._v("Docker 拥有自己的Docker Engine ,  该Engine负责与宿主机通讯, 所有的Docker容器基于该Engine执行;  每个容器只有必要的运行环境, 节约资源, 启动迅速.")]),a._v(" "),e("h2",{attrs:{id:"image-镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#image-镜像"}},[a._v("#")]),a._v(" Image 镜像")]),a._v(" "),e("p",[a._v("底层文件系统, 只存储了必要的运行时文件;  如 mysql 镜像, 该镜像只又最基本的MySQL运行时必要环境.")]),a._v(" "),e("h2",{attrs:{id:"container-容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#container-容器"}},[a._v("#")]),a._v(" Container 容器")]),a._v(" "),e("ol",[e("li",[e("code",[a._v("镜像运行时")]),a._v("  的 "),e("code",[a._v("实例")]),a._v(" , 使用   "),e("code",[a._v("docker run 镜像")]),a._v("    命令,  从镜像产生一个新的 "),e("code",[a._v("Container")]),a._v(" 容器, 该容器独立运行, 具有 "),e("code",[a._v("生命周期")])]),a._v(" "),e("li",[a._v("每个容器生来就是为了执行某一个进程的, 所以容器启动时, 会默认执行某一个程序. 而且必须指定默认启动执行的命令")]),a._v(" "),e("li",[a._v("容器可以通过save,load进行转移(拷贝)")])]),a._v(" "),e("h2",{attrs:{id:"registry-仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#registry-仓库"}},[a._v("#")]),a._v(" Registry 仓库")]),a._v(" "),e("p",[a._v("远程仓库,  主要存放各种 "),e("code",[a._v("Image 镜像")])]),a._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),e("p",[a._v("Docker最重要的三个概念就是 "),e("code",[a._v("Image")]),a._v(" , "),e("code",[a._v("Container")]),a._v(" , "),e("code",[a._v("Registry")]),a._v(" , 后续章节入门使用.")]),a._v(" "),e("h2",{attrs:{id:"其他问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他问题"}},[a._v("#")]),a._v(" 其他问题")]),a._v(" "),e("p",[a._v("解决Linux环境下, 普通用户无权限操作  docker .")]),a._v(" "),e("ol",[e("li",[a._v("添加docker组")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo groupadd  docker\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[a._v("将当前登陆的用户/普通用户 加入docker组")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo gpasswd -a $USER  docker\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[a._v("重启Docker")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("systemctl restart  docker\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[a._v("更新用户组")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("newgrp  docker\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);