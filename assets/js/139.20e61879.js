(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{492:function(t,n,e){"use strict";e.r(n);var a=e(13),i=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("备忘录模式是 "),e("code",[t._v("行为模式")]),t._v(" 的一种，用于保存/恢复对象的某个状态。\n比如后悔药，游戏存档，数据库的事务管理。")]),t._v(" "),e("h1",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[t._v("包括三大组件： "),e("code",[t._v("Memento")]),t._v("、 "),e("code",[t._v("Originator")]),t._v(" 、 "),e("code",[t._v("CareTaker")]),t._v("。")]),t._v(" "),e("ol",[e("li",[t._v("组件介绍")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Memento")]),t._v(": 备忘数据的封装类")]),t._v(" "),e("li",[e("code",[t._v("Originator")]),t._v(": 需要被存储的对象（内部状态需要被保存/恢复），发出备忘/回复请求的对象")]),t._v(" "),e("li",[e("code",[t._v("CareTaker")]),t._v(": 用于存储/获取备忘录封装对象的类")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("工作流程")])]),t._v(" "),e("ul",[e("li",[t._v("备忘流程")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("获取Originator的状态 --\x3e 封装成一个 Memento 对象 --\x3e 存储进CareTaker --\x3e 保存完毕\n")])])]),e("ul",[e("li",[t._v("恢复流程")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("从CareTaker获取Memento对象 --\x3e  从 Memento 对象中获取相应的信息 --\x3e 将信息赋给 Originator --\x3e 恢复成功\n")])])]),e("h2",{attrs:{id:"举个例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#举个例子"}},[t._v("#")]),t._v(" 举个例子")]),t._v(" "),e("p",[t._v("结构图：")]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/dp16_memento_00.png",alt:""}})]),t._v(" "),e("ul",[e("li",[t._v("Originator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('/**\n * 内部状态  需要被备忘的  实体类\n */\npublic class Originator {\n\n    //这个属性需要被备忘\n    private String state;\n    private int id;\n\n\n    public Originator(int id) {\n        this.id = id;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n        System.out.println(id+"_当前： "+state);\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    /**\n     * 将自身状态 封装成 一个 Memento 对象\n     * @return Memento备忘实例\n     */\n    public Memento saveState2Memento() {\n        return new Memento(id,state);\n    }\n\n    /**\n     *从备忘实例中获取状态信息， 并恢复\n     * @param memento 备忘实例\n     */\n    public void getStateFromMemento(Memento memento) {\n        this.state = memento.getState();\n        System.out.println(id+"_恢复至： "+state);\n    }\n\n}\n')])])]),e("ul",[e("li",[t._v("Memento")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/**\n * 用于存储备忘信息的 封装类\n */\npublic class Memento {\n    //与Originator 需要备忘的属性相同\n    private  int id ;\n    private String  state;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public Memento(int id, String state) {\n        this.id = id;\n        this.state = state;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n    }\n\n\n}\n")])])]),e("ul",[e("li",[t._v("CareTaker")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('/**\n * 一个容器，用于存储和获取 备忘实例\n */\npublic class CareTaker {\n\n    private Map<Integer, Memento> map = new HashMap<>();\n\n    /**\n     * 存储保存备忘对象\n     * @param memento 备忘实例\n     */\n    public void add(Memento memento) {\n\n        System.out.println(memento.getId()+"_备忘:     "+memento.getState());\n\n        map.put(memento.getId(), memento);\n    }\n\n\n    /**\n     *  获取备忘对象\n     * @param id id\n     * @return 备忘实例\n     */\n    public Memento get(int id) {\n        return map.get(id);\n    }\n}\n\n')])])]),e("ul",[e("li",[t._v("测试类")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('public class Main {\n    public static void main(String[] args) {\n\n        CareTaker taker = new CareTaker();\n\n        Originator o1 = new Originator(1001);\n        o1.setState("#1");\n        o1.setState("#2");\n        taker.add(o1.saveState2Memento());\n        o1.setState("#3");\n\n\n        Originator o2 = new Originator(2002);\n        o2.setState("#1");\n        taker.add(o2.saveState2Memento());\n        o2.setState("#2");\n\n        System.out.println("================");\n\n\n        o1.getStateFromMemento(taker.get(o1.getId()));\n        o2.getStateFromMemento(taker.get(o2.getId()));\n\n    }\n}\n\n/**\n1001_当前： #1\n1001_当前： #2\n1001_备忘:     #2\n1001_当前： #3\n2002_当前： #1\n2002_备忘:     #1\n2002_当前： #2\n================\n1001_恢复至： #2\n2002_恢复至： #1\n**/\n\n')])])])])}),[],!1,null,null,null);n.default=i.exports}}]);