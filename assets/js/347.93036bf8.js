(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{380:function(v,_,e){"use strict";e.r(_);var t=e(13),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("在python中，  使用正则必须导入"),e("code",[v._v("re")]),v._v(" 模块")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[v._v("import re\n")])])]),e("h3",{attrs:{id:"元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[v._v("#")]),v._v(" 元字符")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("\\d")]),v._v("：  匹配任何数字，相当于 [0-9]")]),v._v(" "),e("li",[e("code",[v._v("\\D")]),v._v("： 匹配任何非数字,相当于 [^0-9]")]),v._v(" "),e("li",[e("code",[v._v("\\s")]),v._v("： 匹配空白字符，相当于 [\\t\\n\\r\\f\\v]")]),v._v(" "),e("li",[e("code",[v._v("\\S")]),v._v("： 匹配所有的非空白字符，相当于[^\\t\\n\\r\\f\\v]")]),v._v(" "),e("li",[e("code",[v._v("\\w")]),v._v("： 匹配任意数字字母下划线，相当于[a-zA-Z0-9_]")]),v._v(" "),e("li",[e("code",[v._v("\\W")]),v._v("： 匹配任意非数字字母下划线,相当于[^a-zA-Z0-9_]")])]),v._v(" "),e("h3",{attrs:{id:"量词"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[v._v("#")]),v._v(" 量词")]),v._v(" "),e("ol",[e("li",[e("code",[v._v(".")]),v._v(" ：表示任意")]),v._v(" "),e("li",[e("code",[v._v("+")]),v._v(" ：表示 1 次或者 n 次")]),v._v(" "),e("li",[e("code",[v._v("*")]),v._v("  ：表示 0 次或者 n 次")]),v._v(" "),e("li",[e("code",[v._v("?")]),v._v(" : 表示 0 次或者 1 次")]),v._v(" "),e("li",[e("code",[v._v("\\")]),v._v(": 后面跟特殊字符表示不同意思，可表示转义")]),v._v(" "),e("li",[e("code",[v._v("^")]),v._v(": 表示以什么开头，在组内表示 非（取反）")])]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("?")]),v._v("：问号的特殊用法是，跟在其他表示次数的符号之后，取消"),e("code",[v._v("贪婪模式")]),v._v("\n例如： "),e("code",[v._v("ab+?")]),v._v(" 表示 a之后的b越少越好，但是至少有一次。")])]),v._v(" "),e("p",[v._v("1、"),e("code",[v._v("{ }")]),v._v(" : 表示次数")]),v._v(" "),e("ul",[e("li",[v._v("{1，10} --- 1-10 次")]),v._v(" "),e("li",[v._v("{1,} --- 至少 1 次")]),v._v(" "),e("li",[v._v("{,10} --- 少于10次")])]),v._v(" "),e("p",[v._v("2、"),e("code",[v._v("[ ]")]),v._v(" ： 表示范围")]),v._v(" "),e("p",[v._v("3、"),e("code",[v._v("（）")]),v._v(" ：表示分组")])])}),[],!1,null,null,null);_.default=o.exports}}]);